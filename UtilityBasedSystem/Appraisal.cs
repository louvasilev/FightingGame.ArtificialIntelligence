
namespace AI.UtilityBasedSystem
{
    /// Copyright © 2016 Lou Vasilev - All rights reserved.
    ///
    /// <summary>
    /// An Appraisal represents an evaluation of a possible Action based
    /// on a certain Factor. Appraisals are generated by Factors. The
    /// Artificial Intelligence (AI) system needs to be able to combine
    /// Appraisals in order to form a final decision about what actions
    /// the character should perform.
    /// </summary>
    /// 
    /// <author>
    /// Lou Vasilev
    /// </author>
    /// <date>
    /// 02-07-2016
    /// </date>
    public class Appraisal
    {
	    // Reperesents a utility score for an action. Possible
	    // values are in the range 0-10.
	    float _basicScore;
	    bool _veto;

	    #region Public properties

	    /// <summary>
	    /// Gets or sets the basic score.
	    /// </summary>
	    /// <value>The basic score.</value>
	    public float BasicScore
	    {
		    get
		    {
			    return _basicScore;
		    }
		    set
		    {
			    _basicScore = value;
		    }
	    }

	    #endregion

	    #region Public constructors

	    /// <summary>
	    /// Initializes a new instance of the <see cref="Appraisal"/> class.
	    /// </summary>
	    public Appraisal () : this(0.0f, false)
	    {
	    }

	    /// <summary>
	    /// Initializes a new instance of the <see cref="Appraisal"/> class.
	    /// </summary>
	    /// <param name="basicScore">Basic score.</param>
	    public Appraisal(float basicScore) : this(basicScore, false)
	    {
	    }

	    /// <summary>
	    /// Initializes a new instance of the <see cref="Appraisal"/> class.
	    /// </summary>
	    /// <param name="veto">If set to <c>true</c> veto.</param>
	    public Appraisal(bool veto) : this(0.0f, veto)
	    {
	    }

	    /// <summary>
	    /// Initializes a new instance of the <see cref="Appraisal"/> class.
	    /// </summary>
	    /// <param name="basicScore">Basic score.</param>
	    /// <param name="veto">If set to <c>true</c> veto.</param>
	    public Appraisal(float basicScore, bool veto)
	    {
		    _basicScore = basicScore;
		    _veto = veto;
	    }

	    #endregion

    }
}